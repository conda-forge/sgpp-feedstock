diff --git a/site_scons/SGppConfigure.py b/site_scons/SGppConfigure.py
index a71dc1470..a4aee5a71 100644
--- a/site_scons/SGppConfigure.py
+++ b/site_scons/SGppConfigure.py
@@ -79,13 +79,6 @@ def doConfigure(env, moduleFolders, languageWrapperFolders):
     # also for the python binding, the library must be suffixed with '*.so' even
     # though it is a dynamiclib and not a bundle (see SConscript in src/pysgpp)
     config.env.AppendUnique(LINKFLAGS=["-undefined", "dynamic_lookup"])
-    # The GNU assembler (GAS) is not supported in Mac OS X.
-    # A solution that fixed this problem is by adding -Wa,-q to the compiler flags.
-    # From the man pages for as (version 1.38):
-    # -q Use the clang(1) integrated assembler instead of the GNU based system assembler.
-    # Note that the CPPFLAG is exactly "-Wa,-q", where -Wa passes flags to the assembler and
-    # -q is the relevant flag to make it use integrated assembler
-    config.env.AppendUnique(CPPFLAGS=["-Wa,-q"])
     config.env.AppendUnique(CPPPATH="/usr/local/include")
     config.env.AppendUnique(LIBPATH="/usr/local/lib")
     config.env["SHLIBSUFFIX"] = ".dylib"
@@ -554,8 +547,8 @@ def configureClangCompiler(config):
   #    "If you are going to use optimisations turned on with gcc > 4.0 (for example -O2),
   #     ensure you also compile with -fno-strict-aliasing"
 #   if not config.env["USE_HPX"]:
-  config.env.Append(CPPFLAGS=["-fopenmp=libiomp5"])
-  config.env.Append(LINKFLAGS=["-fopenmp=libiomp5"])
+  #config.env.Append(CPPFLAGS=["-fopenmp=libiomp5"])
+  #config.env.Append(LINKFLAGS=["-fopenmp=libiomp5"])
 
   if config.env["BUILD_STATICLIB"]:
     config.env.Append(CPPFLAGS=["-D_BUILD_STATICLIB"])
